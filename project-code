#define CUSTOM_SETTINGS
#define INCLUDE_GPS_SHIELD
#define INCLUDE_SMS_SHIELD
#define INCLUDE_INTERNET_SHIELD
#define INCLUDE_CAMERA_SHIELD
#define INCLUDE_TWITTER_SHIELD
#define INCLUDE_VOICE_RECOGNIZER_SHIELD
#define INCLUDE_PHONE_SHIELD

#include <OneSheeld.h>

float longitude;
float latitude;

HttpRequest immobRequest("https://api.thingspeak.com/channels/246761/fields/1/last.txt"); //For checking the immobilization boolean (0,1)
HttpRequest immobSetRequest("https://api.thingspeak.com/update"); //To reset the remote variable upon owner unlocking car
const char *myImmobKey = "M8A2UQRXB2321QN9"; //API key to write to ThingSpeak

HttpRequest request("https://api.thingspeak.com/update"); //This and the following 3 lines are for writing the longitude and latitude to thingspeak channel
const char *myWriteAPIKey = "KY6FGVBF9MNSM8B0";
char charSensor[11];

int lockedPin = 13;
int stolenPin = 12;
int immobilisedPin = 11;
int unlockedPin = 10;

int delayRequestPin = 7;

int count = 0;
const int autoLockTime = 3;
int immob = 0;

int state = 0;
const char unlockCommand[] = "unlock";
boolean voiceInput = false;

void setup() {
  OneSheeld.begin();
  immobRequest.setOnSuccess(&onSuccess);

  request.addParameter("api_key", myWriteAPIKey);

  immobSetRequest.addParameter("api_key", myImmobKey);
  immobSetRequest.addParameter("field1", "0");
  VoiceRecognition.start();
}



void loop() {
  switch (state)
  {
    case 0:
      locked();
      break;
    case 1:
      stolen();
      break;
    case 2:
      immobilised();
      break;
    case 3:
      unlocked();
      break;
    default:
      locked();
      break;
  }
}

void locked()
{
  if (0)//!GPS.isInRange(latitude, longitude, 100))
  {
    state = 1;
    carStolen();
  }
  else
  {
    if(VoiceRecognition.isNewCommandReceived())
    {
      if(!strcmp(unlockCommand,VoiceRecognition.getLastCommand()))
      {
        state = 3;
      }
    }
  }
}

void stolen()
{
  Internet.performGet(immobRequest);
  delay(1000);
  if (immob) //Checks the value of the immobilizer boolean (0,1) on the thingspeak and simulates the shutdown of the vehicle
  {
    state = 2;
    //Simulated shutdown of vehicle and be unable to restart it without the assigned "key" (Button)
  }
  trackVehicle();
}

void immobilised()
{
  if(VoiceRecognition.isNewCommandReceived())
  {
    if(!strcmp(unlockCommand,VoiceRecognition.getLastCommand()))
    {
      voiceInput = true;
    }
  }
  if(voiceInput)
  {
    state = 0;
    voiceInput = false;
    immobOff();
  }
}

void unlocked()
{
  if (!GPS.isInRange(latitude, longitude, 100)) //GPS.isInRange does not function as it should, so we replaced it with a button press for the moment.
  {
    trackVehicle();
  }
  else
  {
    if(VoiceRecognition.isNewCommandReceived())
    {
      if(!strcmp(unlockCommand,VoiceRecognition.getLastCommand()))
      {
        voiceInput = true;
      }
    }
    count++;
    if (count == autoLockTime)
    {
      state = 0;
      count = 0;
    }
    else if (voiceInput)
    {
      state = 0;
      count = 0;
      voiceInput = false;
    }
    //--------------
    if (!locked)
    {
      delay(10000);
    }
  }
}



void carStolen()
{
  Camera.frontCapture();
  SMS.send("0876762250", "Your car has been stolen. The security company has been informed. You can track your car on our website http://websiteURLhere/");
  //SMS.send("0876762250", "Car belonging to Mary has been stolen. It is a red VW Golf. Registration is 01 C 12345");
  Phone.call("0876762250");
  Facebook.postLastPicture("this is the person that stole my car" , FROM_ONESHEELD_FOLDER);
  Twitter.tweetLastPicture("This person stole a red VW Golf. Registration is 01 C 12345." , FROM_ONESHEELD_FOLDER);
} //END OF carStolen()

void immobOff() //Turn off the immobiliser and update the local and remote immobilise variables
{
  Internet.performPost(immobSetRequest);                    //Perform update to Thingspeak site
  immob = 0;                                        //Set local immobilise variable to false
}//END OF immobOff()

void trackVehicle()
{
  longitude = GPS.getLongitude();                 //Get Longitude
  latitude = GPS.getLatitude();                   //Get Latitude
  dtostrf(longitude, 10, 6, charSensor);          //Convert float longitude to char array
  request.addParameter("field1", charSensor);     //Add longitude char array as parameter to the request
  dtostrf(latitude, 10, 6, charSensor);           //Convert float latitude to char array
  request.addParameter("field2", charSensor);     //Add longitude char array as parameter to the request
  Internet.performPost(request);                  //Perform update to Thinspeak site
  delay(20000);
} //END OF trackVehicle()

void onSuccess(HttpResponse &response)
{
  char *immobTxt = response.getBytes();
  immob = atoi(immobTxt);
}//END OF onSuccess()
